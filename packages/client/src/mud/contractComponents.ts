/* Autogenerated file. Do not edit manually. */

import { TableId } from "@latticexyz/utils";
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    Player: (() => {
      const tableId = new TableId("mud", "Player");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Room: (() => {
      const tableId = new TableId("mud", "Room");
      return defineComponent(
        world,
        {
          x: RecsType.Number,
          y: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Position: (() => {
      const tableId = new TableId("mud", "Position");
      return defineComponent(
        world,
        {
          x: RecsType.Number,
          y: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Health: (() => {
      const tableId = new TableId("mud", "Health");
      return defineComponent(
        world,
        {
          current: RecsType.Number,
          max: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    MoveSpeed: (() => {
      const tableId = new TableId("mud", "MoveSpeed");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Stamina: (() => {
      const tableId = new TableId("mud", "Stamina");
      return defineComponent(
        world,
        {
          current: RecsType.Number,
          max: RecsType.Number,
          regen: RecsType.Number,
          lastRefreshedAt: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    ItemType: (() => {
      const tableId = new TableId("mud", "ItemType");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Attack: (() => {
      const tableId = new TableId("mud", "Attack");
      return defineComponent(
        world,
        {
          strength: RecsType.Number,
          staminaCost: RecsType.Number,
          minRange: RecsType.Number,
          maxRange: RecsType.Number,
          patternX: RecsType.NumberArray,
          patternY: RecsType.NumberArray,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Inventory: (() => {
      const tableId = new TableId("mud", "Inventory");
      return defineComponent(
        world,
        {
          equipSize: RecsType.Number,
          size: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    EquippedBy: (() => {
      const tableId = new TableId("mud", "EquippedBy");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    InInventoryOf: (() => {
      const tableId = new TableId("mud", "InInventoryOf");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Attribute: (() => {
      const tableId = new TableId("mud", "Attribute");
      return defineComponent(
        world,
        {
          attributeType: RecsType.Number,
          healthMax: RecsType.Number,
          strength: RecsType.Number,
          staminaRegen: RecsType.Number,
          staminaCost: RecsType.Number,
          moveSpeed: RecsType.Number,
          heal: RecsType.Number,
          rangeMin: RecsType.Number,
          rangeMax: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    OnItem: (() => {
      const tableId = new TableId("mud", "OnItem");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    BonusAttributes: (() => {
      const tableId = new TableId("mud", "BonusAttributes");
      return defineComponent(
        world,
        {
          healthMax: RecsType.Number,
          strength: RecsType.Number,
          staminaRegen: RecsType.Number,
          staminaCost: RecsType.Number,
          moveSpeed: RecsType.Number,
          heal: RecsType.Number,
          rangeMin: RecsType.Number,
          rangeMax: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    MonsterType: (() => {
      const tableId = new TableId("mud", "MonsterType");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Spawner: (() => {
      const tableId = new TableId("mud", "Spawner");
      return defineComponent(
        world,
        {
          value: RecsType.Boolean,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Nonce: (() => {
      const tableId = new TableId("mud", "Nonce");
      return defineComponent(
        world,
        {
          value: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    RngCommit: (() => {
      const tableId = new TableId("mud", "RngCommit");
      return defineComponent(
        world,
        {
          blockNumber: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
  };
}
